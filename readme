# 🌍 Wazobia: WhatsApp AI Translator

> A FastAPI-based application for seamless translation of WhatsApp messages between English, Igbo, Yoruba, and Hausa.

[![License: MIT](https://img.shields.io/badge/License-MIT-green.svg)](LICENSE)
[![Python 3.8+](https://img.shields.io/badge/python-3.8+-blue.svg)](https://www.python.org/downloads/)
[![FastAPI](https://img.shields.io/badge/FastAPI-0.68.0+-00a393.svg)](https://fastapi.tiangolo.com)

## 🚀 Features

* 💬 **WhatsApp Integration** - Send/receive messages via WhatsApp Cloud API
* 🔄 **Text & Voice Translation** - Support for both text and audio messages
* ⚙️ **User Preferences** - Customizable language and output settings
* 📝 **Web Forms** - User-friendly signup and settings interfaces
* 🗄️ **Data Storage** - PostgreSQL database with SQLAlchemy ORM
* 🔒 **Message Deduplication** - Redis-based duplicate prevention
* 🎵 **Audio Processing** - WhatsApp-compatible audio conversion
* 🗣️ **Spitch API** - Professional translation and speech synthesis

## 📂 Project Structure

```
wazobia/
├── app.py                # FastAPI endpoints
├── database.py           # SQLAlchemy models and DB session
├── models.py            # Translator and related logic
├── wa_handler.py        # WhatsApp message/media handling
├── templates/
│   ├── signup.html      # Signup form
│   └── settings.html    # Settings form
├── requirements.txt
└── README.md
```

## 🛠️ Setup & Installation

### Prerequisites

- Python 3.8 or higher
- PostgreSQL database
- Redis server
- WhatsApp Business Account
- Spitch API credentials

### 1. Clone & Setup Environment

```bash
# Clone the repository
git clone <your-repo-url>
cd wazobia

# Create and activate virtual environment
python -m venv wazobia
source wazobia/bin/activate  # Unix/macOS
# OR
wazobia\Scripts\activate     # Windows
```

### 2. Install Dependencies

```bash
pip install -r requirements.txt
```

### 3. Configure Environment

Create `.env` file with the following variables:

```ini
DB_URL="postgresql://<user>:<pass>@<host>/<db>?sslmode=require"
WA_PHONE_NUMBER_ID="your-whatsapp-phone-id"
WA_VERIFY_TOKEN="your-verify-token"
WA_ACCESS_TOKEN="your-access-token"
SPITCH_API_KEY="your-spitch-api-key"
REDIS_HOST="redis-host"
REDIS_PORT="6379"
REDIS_USERNAME="redis-user"
REDIS_PASSWORD="redis-password"
SIGNUP="https://<your-domain>/signup"
SETTINGS="https://<your-domain>/settings"
```

## 🚀 Running the Application

```bash
uvicorn app:app --reload
```

Access the application at:
- 📝 Signup: [http://localhost:8000/signup](http://localhost:8000/signup)
- ⚙️ Settings: [http://localhost:8000/settings](http://localhost:8000/settings)

## 🔗 WhatsApp Integration

1. Set up a tunnel to your local server (ngrok/Azure Dev Tunnels)
2. Configure WhatsApp webhook to your `/webhook` endpoint
3. Use the same verify token as in your `.env`

## 📱 Usage Guide

### User Registration
1. Visit the signup page
2. Enter your WhatsApp phone number
3. Select language preferences
4. Choose output format (text/voice/both)

### Updating Preferences
- Visit the settings page to modify:
  - Default language
  - Output language
  - Response format

### Translation Flow
1. Send a message (text/voice) to the bot
2. Receive translation based on preferences:
   - 📝 Text translation
   - 🎤 Voice message
   - ✨ Both formats

## 🌐 Supported Languages

| Language | Code |
|----------|------|
| English  | `en` |
| Igbo     | `ig` |
| Yoruba   | `yo` |
| Hausa    | `ha` |

## 🔌 API Endpoints

| Method | Endpoint | Description |
|--------|----------|-------------|
| GET    | `/signup` | Signup form |
| POST   | `/signup` | Create user |
| GET    | `/settings` | Settings form |
| POST   | `/settings` | Update preferences |
| POST   | `/webhook` | WhatsApp webhook |
| GET    | `/webhook` | Webhook verification |
| POST   | `/send_message` | Test message sending |

## 📝 Technical Notes

- Audio files are automatically converted for WhatsApp
- Redis ensures no duplicate message processing
- Spitch API handles translations and TTS

## 📄 License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## 🙏 Acknowledgements

- [FastAPI](https://fastapi.tiangolo.com/)
- [SQLAlchemy](https://www.sqlalchemy.org/)
- [Spitch API](https://spitch.io/)
- [WhatsApp Cloud API](https://developers.facebook.com/docs/whatsapp/cloud-api)
- [Redis](https://redis.io/)
- [Jinja2](https://jinja.palletsprojects.com/)